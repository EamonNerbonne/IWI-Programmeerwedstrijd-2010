#!/usr/bin/perl

# ------------------------------------------------------------
#
# Generate an overview of all problems
#
# Usage : perl mpOverview.pl > overview.tex
#
# ------------------------------------------------------------

use strict;
use warnings "all";

my $input_dir = '../problems';

# ------------------------------------------------------------
# walk over all problems
# ------------------------------------------------------------

my $UNKNOWN = '\\unknown';
my @problems;

for my $dir (glob "$input_dir/*") {
	my $name = $dir;
	$name =~ s#.*/##;
	next if !-e "$dir/text/problem.tex";
	print STDERR "Found problem: $name\n";
	
	my %problem = (
		'name'            => $name,
		'author'          => $UNKNOWN,
		'contest'         => $UNKNOWN,
		'text-completion' => $UNKNOWN,
		'keywords'        => $UNKNOWN,
		'difficulty'      => $UNKNOWN,
	);
	
	# Comment blocks, TODOs
	my $todos = 0;
	open TEXFILE, "<$dir/text/problem.tex";
	while (<TEXFILE>) {
		s/\r//g;
		if (/%% (\S*):\s*(.*)/) {
			#print " info: $1: $2\n";
			$problem{$1} = $2;
		}
		if (/\\TODO/) {
			$todos++;
		}
	}
	close TEXFILE;
	
	# implementations
	my %implementors;
	my %languages;
	while (glob "$dir/impl/*") {
		s#.*/##;
		if (/(?:$name|.*?)[-_](.*?)[0-9]*(?:[-_].*?)?[.](cpp|c|java|rb|hs|ape)$/) {
			$implementors{lc $1} = 1;
			$languages{$2} = 1;
		}
	}
	$problem{'implementors'} = join(',\\\\ ',keys %implementors);
	$problem{'languages'}    = join(',\\\\ ',keys %languages);
	my $num_impls = scalar keys %implementors;
	
	# Status
	my @errors;
	# do we have a .tex file?
	push @errors, 'no problem.tex'	if !-s "$dir/text/problem.tex";
	push @errors, 'no example.in'	if !-s "$dir/input/example.in";
	push @errors, 'no testdata'	if (!-s "$dir/input/testdata.in" or !-s "$dir/input/testdata.out");
	push @errors, 'no Makefile'	if (!-s "$dir/input/Makefile" or !-s "$dir/Makefile" or !-s "$dir/impl/Makefile");
	push @errors, 'no svn!'		if !-d "$dir/.svn";
	push @errors, "$todos {\\sc todo}s"	if $todos;
	push @errors, "few impls ($num_impls)"	if $num_impls < 2;
	$problem{'errors'} = join(',\\\\ ',@errors);
	
	print STDERR #%implementors;
	
	# Add to the list
	push @problems, \%problem;
}

# ------------------------------------------------------------
# output as fancy tex file
# ------------------------------------------------------------

my $target_contest = $ARGV[0];
my $skip_contest   = $ARGV[1];
print STDERR "Target contest: [$target_contest], skip contest: [$skip_contest]\n";

print <<EOF;
% Warning: this file is autogenerated!
\\documentclass{article}
\\usepackage[left=2cm,top=2cm,right=2cm,bottom=2cm]{geometry}
\\usepackage{longtable}
\\newcommand{\\unknown}{\\bf ?}
\\renewcommand{\\arraystretch}{1.5}
%\\addtolength{\\tabcolsep}{-1pt}
\\begin{document}
{\\small ~(version: \\today)\\\\}
\\begin{longtable}{lllllp{15mm}p{15mm}p{25mm}}
  \\bf problem & \\bf contest & \\bf keywords & \\bf author & \\bf text & \\bf languages & \\bf impls. & \\bf problems
\\\\
\\hline
EOF

for my $problem (@problems) {
	next if $target_contest && $problem->{'contest'} !~ $target_contest;
	next if $skip_contest   && $problem->{'contest'} =~ $skip_contest;
	my @cats = ('name','contest','keywords','author','text-completion','languages','implementors','errors');
	my @columns;
	for my $cat (@cats) {
		my $value = $problem->{$cat};
		$value =~ s/%/\\%/g;
		push @columns, "{\\raggedright ".$value."} % $cat\n";
	}
	print join('&',@columns), "\\\\\\hline\n";
}

print <<EOF;
\\end{longtable}
\\end{document}
EOF
